"use strict";function UITableView(scope,element,attr,$timeout,$log){function updateContainer(){tv.container.height=+container.attr("height")||container.prop("clientHeight"),tv.container.width=+container.attr("width")||container.prop("clientWidth")}function updateWrapper(){tv.wrapper.height=scope.items.length*tv.row.height,wrapper.css("height",tv.wrapper.height+"px")}function setupNextTick(){angular.extend(tv._scroll,tv.scroll),angular.extend(tv._view,tv.view),angular.extend(tv._buffer,tv.buffer),$log.debug("Setup next tick",tv.scroll.y,tv.buffer.top,tv.buffer.bottom,tv.buffer.yTop,tv.buffer.yBottom)}function positionElements(){tv.buffer.elements=element.children().children();for(var i=0;i<tv.buffer.items.length;i++){var item=tv.buffer.items[i],el=angular.element(tv.buffer.elements[i]);el.css({position:"absolute",width:"100%",height:tv.row.height+"px",webkitTransform:"translateY("+item.$$top+"px)"})}}function validateBuffer(){tv.buffer.top<0?(tv.buffer.top=0,tv.buffer.bottom=tv.buffer.size-1):tv.buffer.bottom>=scope.items.length&&(tv.buffer.top=scope.items.length-tv.buffer.size,tv.buffer.bottom=scope.items.length-1),tv.buffer.yTop=tv.buffer.top*tv.row.height,tv.buffer.yBottom=(tv.buffer.bottom+1)*tv.row.height,tv.buffer.atEdge=tv.buffer.top<=0?EDGE_TOP:tv.buffer.bottom>=scope.items.length-1?EDGE_BOTTOM:!1}function isRenderRequired(){return $log.debug("Render required?",tv.scroll.direction,tv.scroll.directionChange,tv.view.deadZone,tv.view.deadZoneChange,tv.buffer.atEdge,tv.view.ytChange,tv.view.ybChange),tv.scroll.direction===SCROLL_UP&&tv.buffer.atEdge!==EDGE_TOP&&tv.view.deadZone===!1&&(tv.scroll.directionChange||tv.view.ytChange)||tv.scroll.direction===SCROLL_DOWN&&tv.buffer.atEdge!==EDGE_BOTTOM&&tv.view.deadZone===!1&&(tv.scroll.directionChange||tv.view.ybChange)||!(tv.view.deadZone!==!1&&tv.view.deadZoneChange===!1)}function isTriggerRequired(){return $log.debug("Trigger required?",tv.view.triggerZone,tv.view.triggerZoneChange),tv.view.triggerZone!==!1&&tv.view.triggerZoneChange}function updateScrollModel(y){tv.scroll.y=y,tv.scroll.yDelta=y-tv._scroll.y,tv.scroll.yIndex=Math.floor(y/tv.row.height),tv.scroll.yIndex<0&&(tv.scroll.yIndex=0),console.log("Scroll update",tv),tv.scroll.yIndex>=scope.items.length&&(tv.scroll.yIndex=scope.items.length-1),tv.scroll.yDistance=Math.abs(tv.scroll.yIndex-tv._scroll.yIndex),tv.scroll.yChange=tv.scroll.yDistance>0,tv.scroll.direction=tv.scroll.yDelta>=0?SCROLL_DOWN:SCROLL_UP,tv.scroll.directionChange=tv.scroll.direction!==tv._scroll.direction,tv.buffer.reset=tv.scroll.yDistance>tv.buffer.size}function updateViewModel(){tv.view.yTop=tv.scroll.y,tv.view.yBottom=tv.scroll.y+tv.container.height,tv.view.top=tv.scroll.yIndex,tv.view.bottom=Math.floor(tv.view.yBottom/tv.row.height),tv.view.atEdge=!(tv.view.top>0&&tv.view.bottom<scope.items.length-1),tv.view.triggerZone=tv.view.yTop<tv.trigger.distance*tv.row.height?EDGE_TOP:tv.view.yBottom>(scope.items.length-tv.trigger.distance-1)*tv.row.height?EDGE_BOTTOM:!1,tv.view.triggerZoneChange=tv.view.triggerZone!==tv._view.triggerZone,tv.view.deadZone=tv.view.yTop<tv.row.height?EDGE_TOP:tv.view.yBottom>(scope.items.length-1)*tv.row.height?EDGE_BOTTOM:!1,tv.view.deadZoneChange=tv.view.deadZone!==tv._view.deadZone,tv.view.ytChange=tv.view.top!==tv._view.top,tv.view.ybChange=tv.view.bottom!==tv._view.bottom,$log.debug("Updated view model",tv.view.yTop,tv.view.yBottom,tv.container.height,tv.scroll.y)}function setBufferToIndex(index){$log.debug("Setting buffer to index",index),tv.buffer.top=index,tv.buffer.bottom=tv.buffer.top+tv.buffer.size,validateBuffer()}function updateBufferModel(){var index=tv.scroll.yIndex,direction=tv.scroll.direction,distance=tv.buffer.distance;switch(direction){case SCROLL_UP:tv.buffer.top=index-distance,tv.buffer.bottom=index-distance+(tv.buffer.size-1);break;case SCROLL_DOWN:tv.buffer.top=index,tv.buffer.bottom=index+tv.buffer.size-1;break;default:$log.debug("We only know how to deal with scrolling on the y axis for now")}validateBuffer(),$log.debug("Updated buffer model",tv.buffer.top,tv.buffer.bottom,tv.buffer.atEdge)}function scrollingUp(start,end){var items=scope.items.slice(start,end+1),px=start*tv.row.height;$log.debug("Slicing up",start,end,tv.getRelativeBufferPosition(end),px,items.length);for(var i=items.length-1;i>=0;i--){var position=tv.getRelativeBufferPosition(end),top=px+tv.row.height*i;items[i].$$top=top,items[i].$$index=end--,$log.debug("Extending",position,top,tv.buffer.items[position],"with",items[i]),angular.extend(tv.buffer.items[position],items[i]),tv.setElementPosition(position,top)}}function scrollingDown(start,end){var items=scope.items.slice(start,end+1),px=start*tv.row.height;$log.debug("Slicing down",start,end,tv.getRelativeBufferPosition(start),px,items.length);for(var i=0;i<items.length;i++){var position=tv.getRelativeBufferPosition(start+i),top=px+tv.row.height*i;items[i].$$top=top,items[i].$$index=start+i,$log.debug("Extending",position,top,tv.buffer.items[position],"with",items[i]),angular.extend(tv.buffer.items[position],items[i]),tv.setElementPosition(position,top)}}function render(){var start,end;if(tv.buffer.reset)switch(start=tv.buffer.top,end=tv.buffer.bottom,tv.scroll.direction){case SCROLL_UP:scrollingUp(start,end);break;case SCROLL_DOWN:scrollingDown(start,end)}else switch(tv.scroll.direction){case SCROLL_UP:start=tv.buffer.top,end=tv._buffer.top-1,scrollingUp(start,end);break;case SCROLL_DOWN:start=tv._buffer.bottom+1,end=tv.buffer.bottom,scrollingDown(start,end)}}function trigger(){switch(tv.view.triggerZone){case EDGE_TOP:attr.mlzUiTableViewTriggerTop&&scope.$eval(attr.mlzUiTableViewTriggerTop);break;case EDGE_BOTTOM:attr.mlzUiTableViewTriggerBottom&&scope.$eval(attr.mlzUiTableViewTriggerBottom);break;default:$log.debug("Zone "+tv.view.triggerZone+" is not supported")}}var BUFFER_SIZE=200,ROW_HEIGHT=40,ROW_WIDTH="100%",EDGE_TOP="top",EDGE_BOTTOM="bottom",SCROLL_UP="up",SCROLL_DOWN="down",TRIGGER_DISTANCE=3,tv={},container=element,wrapper=angular.element(container.children());return container.css("overflow","auto"),container.addClass("mlz-ui-table-view"),wrapper.css("position","relative"),tv.container={height:container.attr("height")||container.prop("clientHeight"),width:container.attr("width")||container.prop("clientWidth")},tv.wrapper={height:0,width:tv.container.width||0},tv.row={height:+attr.mlzUiTableViewRowHeight||ROW_HEIGHT,width:+attr.mlzUiTableViewColumnWidth||ROW_WIDTH},tv.trigger={distance:TRIGGER_DISTANCE},tv.scroll={x:0,xDelta:0,xIndex:0,xDistance:0,xChange:!1,y:0,yDelta:0,yIndex:0,yDistance:0,yChange:!1,pointer:0,direction:SCROLL_DOWN,directionChange:!1},tv._scroll=angular.copy(tv.scroll),tv.metadata={$$position:0,$$visible:!0,$$top:0,$$height:0},tv.view={top:0,bottom:0,left:0,right:0,items:[],size:0,yTop:0,yBottom:0,atEdge:EDGE_TOP,deadZone:EDGE_TOP,deadZoneChange:!1},tv._view=angular.copy(tv.view),tv.buffer={size:+attr.mlzUiTableViewBufferSize||BUFFER_SIZE,items:[],elements:[],top:0,bottom:0,left:0,right:0,yTop:0,yBottom:0,atEdge:EDGE_TOP,pointer:0,distance:0,reset:!1},tv._buffer=angular.copy(tv.buffer),tv.initialise=function(){updateContainer(),updateWrapper(),tv.view.size=Math.ceil(tv.container.height/tv.row.height)+1,tv.buffer.bottom=tv.buffer.size-1||BUFFER_SIZE-1,tv.buffer.yBottom=tv.buffer.size*tv.row.height||BUFFER_SIZE*ROW_HEIGHT,tv.buffer.distance=tv.buffer.size-tv.view.size,positionElements(),$log.debug("Scroller initialised",tv.container.height,tv.buffer.size,tv.buffer.distance,tv.view.size,tv.row.height,scope.items.length,tv.buffer.items.length)},tv.scrollToTop=function(){element.animate({scrollTop:0},"slow")},tv.initialiseBuffer=function(){if(!scope.items)return!1;angular.copy(scope.items.slice(tv.buffer.top,tv.buffer.bottom+1),tv.buffer.items);for(var i=0;i<tv.buffer.items.length;i++)tv.buffer.items[i].$$position=i,console.log("Adding position",tv.buffer.items[i].$$position);tv.drawBuffer(),$timeout(function(){tv.initialise()}),setupNextTick()},tv.drawBuffer=function(){var position=(scope.items.slice(tv.buffer.top,tv.buffer.bottom+1),tv.getRelativeBufferPosition(tv.buffer.top));console.log("Drawing list from",position,tv.buffer.top,tv.buffer.bottom);for(var i=tv.buffer.top;i<=tv.buffer.bottom;i++){var pos=tv.getRelativeBufferPosition(i);console.log("Extending",tv.buffer.items[pos],scope.items[i]),angular.extend(tv.buffer.items[pos],scope.items[i]),tv.buffer.items[pos].$$index=i,tv.buffer.items[pos].$$height=tv.row.height,tv.buffer.items[pos].$$top=tv.row.height*i,tv.buffer.items[pos].$$visible=!1,tv.buffer.items[pos].$$position=pos,i<tv.view.size&&(tv.buffer.items[i].$$visible=!0),position++,position>=tv.buffer.items.length&&(position=0)}},tv.getRelativeBufferPosition=function(index){return index%tv.buffer.size},tv.setScrollPosition=function(x,y){if(void 0===y&&(y=x),updateScrollModel(y),updateViewModel(),tv.buffer.reset)switch(tv.scroll.direction){case SCROLL_UP:setBufferToIndex(tv.view.bottom-tv.buffer.size);break;case SCROLL_DOWN:setBufferToIndex(tv.view.top)}updateBufferModel(),isRenderRequired()&&render(),isTriggerRequired()&&trigger(),setupNextTick()},tv.setScrollYIndex=function(index){var y=index*tv.row.height;container.prop("scrollTop",y),tv.setScrollPosition(y)},tv.setScrollYPosition=function(y){container.prop("scrollTop",y),tv.setScrollPosition(y)},tv.processScrollEvent=function(e,distance){tv.setScrollPosition(distance)},tv.deleteItem=function(index){console.log("Deleting item @",index),scope.items.splice(index,1),tv.buffer.atEdge===EDGE_BOTTOM&&(tv.buffer.top--,tv.buffer.bottom--),tv.drawBuffer(),positionElements(),updateWrapper()},tv.setElementPosition=function(index,y){var el=angular.element(tv.buffer.elements[index]);return el?(el.css("display","none"),el.css("-webkit-transform","translateY("+y+"px)"),el.css("display","block"),!0):!1},tv}angular.module("mallzee.ui-table-view",[]).directive("mlzUiTableView",["$window","$timeout","$log",function($window,$timeout,$log){return{restrict:"A",transclude:!0,replace:!1,template:'<div class="mlz-ui-table-view-wrapper" ng-transclude></div>',link:function(scope,element,attributes){console.log("link scope",scope),scope.tableView=UITableView(scope,element,attributes,$timeout,$log),scope.tableView.initialise(),scope.tableView.initialiseBuffer(),scope.items=scope.$eval(attributes.items),scope.$watchCollection("items",function(items,old){console.log("Items changed",items.length,old.length,scope.tableView.buffer.items)}),scope.addItem=function(item,index){console.log("Adding item",item,index)},$window.addEventListener("statusTap",function(){scope.tableView.scrollToTop()}),element.on("scroll",function(e){scope.$apply(function(){scope.tableView.processScrollEvent(e,element[0].scrollTop)})})}}}]);