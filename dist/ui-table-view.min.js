!function(window,angular,undefined){"use strict";angular.module("mallzee.ui-table-view",[]).directive("mlzUiTableView",["$window","$timeout","$log",function($window,$timeout,$log){function initialise(scope,attributes){_scroll=angular.copy(scroll),_view=angular.copy(view),_buffer=angular.copy(buffer),attributes.rowHeight&&(row.height=+attributes.rowHeight),attributes.columns&&(columns=+attributes.columns),attributes.bufferSize&&(buffer.rows=+attributes.bufferSize,buffer.size=buffer.rows*columns),attributes.triggerTop&&(triggerTop=function(){scope.$eval(attributes.triggerTop)}),attributes.triggerBottom&&(triggerBottom=function(){scope.$eval(attributes.triggerBottom)}),calculateDimensions(),createBuffer(),positionElements()}function scrollToTop(){container.el.animate({scrollTop:0},"slow")}function createBuffer(){if(!list)return!1;angular.copy(list.slice(buffer.top,buffer.bottom),items);for(var i=0;i<items.length;i++)items[i].$$position=i;drawBuffer(),setupNextTick()}function drawBuffer(){if(list.length<=0||items.length<=0)return!1;for(var p,x,y,el,e,r=buffer.top-1,i=0;i<buffer.size;i++)e=buffer.top*columns+i,p=getRelativeBufferPosition(e),p%columns===0?r++:null,x=p%columns*(container.width/columns),y=r*row.height,el=angular.element(elements[p]),e>=list.length?hideElement(p):showElement(p),angular.extend(items[p],list[e]),items[p].$$index=e,items[p].$$height=row.height,items[p].$$top=y,items[p].$$visible=!1,renderElement(p,x,y),i<view.size&&(items[i].$$visible=!0);calculateWrapper()}function setScrollPosition(x,y){if(y===undefined&&(y=x),updateScrollModel(y),updateViewModel(),buffer.reset)switch(scroll.direction){case SCROLL_UP:setBufferToIndex(view.bottom-buffer.size);break;case SCROLL_DOWN:setBufferToIndex(view.top)}updateBufferModel(),render(),isTriggerRequired()&&triggerEdge(),setupNextTick()}function getRelativeBufferPosition(index){return index%buffer.size}function setupNextTick(){angular.extend(_scroll,scroll),angular.extend(_view,view),angular.extend(_buffer,buffer)}function positionElements(){$timeout(function(){elements=container.el.children().children();for(var p,x,y,el,r=buffer.top-1,i=buffer.top;i<buffer.top+buffer.size;i++)p=getRelativeBufferPosition(i),p%columns===0?r++:null,x=p%columns*(container.width/columns),y=r*row.height,el=angular.element(elements[p]),el.css({position:"absolute",height:row.height+"px",webkitTransform:"translate3d("+x+"px, "+y+"px, 0px)"})})}function validateBuffer(){buffer.top<0?(buffer.top=0,buffer.bottom=buffer.size/columns):buffer.bottom>=list.length&&(buffer.top=(list.length-buffer.size)/columns,buffer.bottom=list.length/columns),buffer.yTop=buffer.top*row.height,buffer.yBottom=buffer.bottom*row.height,buffer.atEdge=buffer.top<=0?EDGE_TOP:buffer.bottom>=list.length?EDGE_BOTTOM:!1}function isRenderRequired(){return scroll.direction===SCROLL_UP&&buffer.atEdge!==EDGE_TOP&&view.deadZone===!1&&(scroll.directionChange||view.ytChange)||scroll.direction===SCROLL_DOWN&&buffer.atEdge!==EDGE_BOTTOM&&view.deadZone===!1&&(scroll.directionChange||view.ytChange)||!(view.deadZone!==!1&&view.deadZoneChange===!1)}function isTriggerRequired(){return view.triggerZone!==!1&&view.triggerZoneChange}function updateScrollModel(y){scroll.y=y,scroll.yDelta=y-_scroll.y,scroll.row=Math.floor(y/row.height),scroll.row<0&&(scroll.row=0),scroll.row>=list.length&&(scroll.row=list.length-1),scroll.yDistance=Math.abs(scroll.row-_scroll.row),scroll.yChange=scroll.yDistance>0,scroll.direction=scroll.yDelta>=0?SCROLL_DOWN:SCROLL_UP,scroll.directionChange=scroll.direction!==_scroll.direction,buffer.reset=scroll.yDistance>buffer.size}function updateViewModel(){view.yTop=scroll.y,view.yBottom=scroll.y+container.height,view.top=scroll.row,view.bottom=Math.floor(view.yBottom/row.height),view.atEdge=!(view.top>0&&view.bottom<list.length-1),view.triggerZone=view.yTop<trigger.distance*row.height?EDGE_TOP:view.yBottom>(list.length-trigger.distance-1)*row.height?EDGE_BOTTOM:!1,view.triggerZoneChange=view.triggerZone!==_view.triggerZone,view.deadZone=view.yTop<row.height?EDGE_TOP:view.yBottom>(list.length-1)*row.height?EDGE_BOTTOM:!1,view.deadZoneChange=view.deadZone!==_view.deadZone,view.ytChange=view.top!==_view.top,view.ybChange=view.bottom!==_view.bottom}function setBufferToIndex(index){buffer.top=index,buffer.bottom=buffer.top+buffer.size,validateBuffer()}function updateBufferModel(){var index=scroll.row,direction=scroll.direction,distance=buffer.distance;switch(direction){case SCROLL_UP:buffer.top=index-distance,buffer.bottom=index-distance+buffer.size/columns;break;case SCROLL_DOWN:buffer.top=index,buffer.bottom=index+buffer.size/columns;break;default:$log.warn("We only know how to deal with scrolling on the y axis for now")}validateBuffer()}function scrollingUp(start,distance){for(var p,x,y,itemsToMerge=list.slice(start*columns,start*columns+distance),r=start+distance/columns-1,i=itemsToMerge.length-1;i>=0;i--)p=getRelativeBufferPosition(start*columns+i),x=p%columns*(container.width/columns),y=r*row.height,itemsToMerge[i].$$top=y,itemsToMerge[i].$$index=start*columns+i,angular.extend(items[p],itemsToMerge[i]),renderElement(p,x,y),p%columns===0?r--:null}function scrollingDown(start,distance){for(var p,x,y,itemsToMerge=list.slice(start*columns,start*columns+distance),r=start-1,i=0;i<itemsToMerge.length;i++)p=getRelativeBufferPosition(start*columns+i),p%columns===0?r++:null,x=p%columns*(container.width/columns),y=r*row.height,itemsToMerge[i].$$top=y,itemsToMerge[i].$$index=start*columns+i,angular.extend(items[p],itemsToMerge[i]),renderElement(p,x,y)}function render(){var start,end,distance;if(isRenderRequired())if(buffer.reset)switch(start=buffer.top,end=buffer.bottom,distance=(end-start)*columns,scroll.direction){case SCROLL_UP:scrollingUp(start,distance);break;case SCROLL_DOWN:scrollingDown(start,distance)}else switch(scroll.direction){case SCROLL_UP:start=buffer.top,end=_buffer.top,distance=Math.abs((end-start)*columns),scrollingUp(start,distance);break;case SCROLL_DOWN:start=_buffer.bottom,end=buffer.bottom,distance=Math.abs((end-start)*columns),scrollingDown(start,distance)}}function renderElement(index,x,y){var element=angular.element(elements[index]);element.css("-webkit-transform","translate3d("+x+"px, "+y+"px, 0px)")}function hideElement(index){var element=angular.element(elements[index]);element.css("visibility","hidden")}function showElement(index){angular.element(elements[index]);elements.css("visibility","normal")}function triggerEdge(){switch(view.triggerZone){case EDGE_TOP:triggerTop();break;case EDGE_BOTTOM:triggerBottom();break;default:$log.warn("Zone "+view.triggerZone+" is not supported")}}function triggerTop(){}function triggerBottom(){}function calculateDimensions(){calculateContainer(),calculateWrapper(),calculateBuffer()}function calculateContainer(){container.height=container.el.prop("clientHeight"),container.width=container.el.prop("clientWidth")}function calculateWrapper(){list&&(wrapper.height=(list.length+list.length%columns)/columns*row.height,wrapper.el.css("height",wrapper.height+"px"))}function calculateBuffer(){view.size=Math.ceil(container.height/row.height)+1,buffer.bottom=buffer.size||BUFFER_SIZE,buffer.yBottom=buffer.size*row.height||BUFFER_SIZE*ROW_HEIGHT,buffer.distance=buffer.rows-view.size>0?buffer.rows-view.size:0}var elements,_scroll,_view,_buffer,BUFFER_SIZE=10,ROW_HEIGHT=40,ROW_WIDTH="100%",EDGE_TOP="top",EDGE_BOTTOM="bottom",SCROLL_UP="up",SCROLL_DOWN="down",TRIGGER_DISTANCE=5,list=[],items=[],container={height:0,width:0,el:undefined},wrapper={height:0,width:0,el:undefined},row={height:ROW_HEIGHT,width:ROW_WIDTH},columns=1,trigger={distance:TRIGGER_DISTANCE},scroll={x:0,xDelta:0,xIndex:0,xDistance:0,xChange:!1,y:0,yDelta:0,yDistance:0,yChange:!1,row:0,pointer:0,direction:SCROLL_DOWN,directionChange:!1},view={top:0,bottom:0,left:0,right:0,items:[],size:0,yTop:0,yBottom:0,atEdge:EDGE_TOP,deadZone:EDGE_TOP,deadZoneChange:!1},buffer={size:BUFFER_SIZE,items:[],elements:[],top:0,bottom:0,left:0,right:0,yTop:0,yBottom:0,atEdge:EDGE_TOP,pointer:0,distance:0,reset:!1};return{restrict:"E",transclude:!0,replace:!1,template:'<div class="mlz-ui-table-view-wrapper" ng-transclude></div>',link:function(scope,element,attributes){container.el=element,wrapper.el=element.children(),elements=element.children().children(),list=scope.$eval(attributes.list),scope.items=items,scope.deleteItem=function(index){list.splice(index,1),buffer.atEdge===EDGE_BOTTOM&&(buffer.top--,buffer.bottom--)},wrapper.el.css("position","relative"),initialise(scope,attributes),scope.$watchCollection("list",function(newList){newList?list=newList:$log.warn("Trying to remove the list completely"),calculateWrapper(),drawBuffer()}),$window.addEventListener("statusTap",function(){scrollToTop()}),container.el.on("scroll",function(){scope.$apply(function(){setScrollPosition(container.el.prop("scrollTop"))})})}}}])}(window,window.angular);